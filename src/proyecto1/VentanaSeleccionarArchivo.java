/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1;

import java.io.File;
import javax.swing.JOptionPane;

public class VentanaSeleccionarArchivo extends javax.swing.JFrame {

    /**
     * Para mantener la referencia a la clase principal y el objeto red,
     * así como la ventana principal.
     */
    private Proyecto1 mainClass;
    private VentanaPrincipal ventanaPrincipal;

    /**
     * Creates new form SeleccionarArchivoForm
     */
    public VentanaSeleccionarArchivo() {
        initComponents();
    }

    /**
     * Constructor de la ventana de selección de archivo.
     * 
     * @param mainClass        referencia a la clase principal
     * @param ventanaPrincipal referencia a la ventana principal
     */
    public VentanaSeleccionarArchivo(Proyecto1 mainClass, VentanaPrincipal ventanaPrincipal) {
        setLocationRelativeTo(ventanaPrincipal);
        this.mainClass = mainClass;
        this.ventanaPrincipal = ventanaPrincipal;
        initComponents();
        // Seleccionar el directorio por defecto
        File directorio = new File("./data/");
        pnSeleccionarArchivo.setCurrentDirectory(directorio);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnSeleccionarArchivo = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnSeleccionarArchivo.setCurrentDirectory(new java.io.File("C:\\Program Files\\NetBeans-23\\.\\data"));
        pnSeleccionarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pnSeleccionarArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnSeleccionarArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 615,
                                Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnSeleccionarArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 363,
                                Short.MAX_VALUE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Manejador el evento que permite seleccionar un archivo o cancelar la
     * selección.
     * Si se selecciona un archivo, se carga el archivo, se cargan los datos de la
     * red, se carga el grafo y se carga el GraphStream.
     * 
     * @param evt
     */
    private void pnSeleccionarArchivoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pnSeleccionarArchivoActionPerformed

        File selectedFile = pnSeleccionarArchivo.getSelectedFile();
        if (selectedFile == null || evt.getActionCommand() == "CancelSelection") {
            this.ventanaPrincipal.setVisible(true);
            dispose();
            return;
        }

        String nombreArchivo = selectedFile.getAbsolutePath();
        if (selectedFile.getName().endsWith(".json")) {
            this.mainClass.red.setNombreArchivo(nombreArchivo);
            if (this.mainClass.red.cargarArchivo()) {
                this.mainClass.red.cargarGrafo();
                this.mainClass.red.cargarGsGraph();
                this.ventanaPrincipal.setVisible(true);
                dispose();
                return;
            }
            JOptionPane.showMessageDialog(this, "Hubo un problema cargando el archivo json: " + nombreArchivo);
            selectedFile = null;
            pnSeleccionarArchivo.setSelectedFile(selectedFile);
            return;
        }
        JOptionPane.showMessageDialog(this, "El archivo: " + nombreArchivo + " no es un .json");
        selectedFile = null;
        pnSeleccionarArchivo.setSelectedFile(selectedFile);
        return;
    }// GEN-LAST:event_pnSeleccionarArchivoActionPerformed

    /**
     * Manejador el evento que cierra la ventana y hace visible de nuevo la ventana
     * principal.
     * 
     * @param evt
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_formWindowClosing
        this.ventanaPrincipal.setVisible(true);
    }// GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaSeleccionarArchivo.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaSeleccionarArchivo.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaSeleccionarArchivo.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaSeleccionarArchivo.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaSeleccionarArchivo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser pnSeleccionarArchivo;
    // End of variables declaration//GEN-END:variables
}
